= 1. Frontend tools

== 1.1 Frontendのコンセプト

  Frontendは、ディスクイメージファイルおよびXMLドキュメントファイルに
対し、対話型で様々な操作を行うためのツールで、既存のイメージファイル
または XMLの編集を支援するためのツールです。

  FrontendはUDFをある程度理解している人が操作することを前提とし、
「あくまでイメージを編集する」ことを主体としています。このため、
ある程度のことは自動で行いますが、それ以外はオペレータが明示的に
指定しなければなりません。

例えば、Frontendは ファイルを追加して Directory Recordが溢れた際に自
動でサイズを増やす等の処理をしません。このような処理をする際は、先に
オペレータが Directoryのサイズを増やし、その後にファイルを追加する
必要があります。

また、ファイルを作成する際も、ファイルエントリの作成、サイズ変更、
データの追加といった三段階の作業を全て明示的に指定してやらなければ
なりません。

このような実装は不便ではありますが、逆を言えば、Frontendで操作をするこ
とにより間違ったファイルシステムをも作ることも可能で、テスト用イメージ
を作成するときには逆に利点となります。

一方、いくつかの作業はFrontendが自動で行います。

例えば、File Systemにファイルを作成する、ディレクトリを作成する等は、
空き領域を自動的に探してくれるため、領域の割り当て等を明示的にする
必要はありません。また、File Entryや File Identifierの regidなども
正しく設定されます。

この明示的な割り当ては、UDF_Policyインターフェース(現在のところ非公開)
を実装したクラスにより実装されています。Frontendはこの割り当てポリシー
を
変更すれば、割り当てのルールをも変更できる柔軟な設計となっています。


== 1.2 Frontendの実行

以下のように実行します。
----------------------------------------------------------------------
例)
  > java -Xmx64m -cp ./udfv.jar com.udfv.test.Frontend
----------------------------------------------------------------------

上記を実行すると、コマンド受付状態になり、標準入力からのコマンドを受けつけ
ることができるようになります。


== 1.3 Frontendの使用方法

Frontendの基本的な流れは次のようになります。

-# 初期化をする
-# 各インスタンスの生成
-# イメージファイルまたはXMLを読みこむ
-# 操作をする
-# 終了する

ただし、初期化、各インスタンスの生成は後述する readImage / readXMLを
使用する場合省略することもできます。

== 1.4 実行例

サンプルとして

-# test.imgという UDFイメージファイルを読みこみ、
-# /XYZW、/ABCDというファイルを作成し、
-# /ABCDを1024バイトにする。
-# その後 SpaceBitmapやchecksumを計算し、
-# XMLを出力する。

を下記に示します。

------------------------------------------------------------------------------
readImage test.img
mkfile /8:XYZW 
mkfile /8:ABCD 
resize /8:ABCD 1024
recalc
outputXML
displayTree
quit
------------------------------------------------------------------------------

上記コマンドを実行すると、test.imgというUDF Imageの Root Directoryに 
XYZWというファイルおよび、ABCDというファイルが作成され、ABCDのファイル
の長さが 1024バイトになります。

その後 recalcで CRCや SpaceBitmapを計算しなおし、XMLを出力し、
test.imgのファイル構造を表示し、終了します。

== 1.5 Frontendのオプション

Frontend では、共通オプションの他に以下のオプションが指定できます。

------------------------------------------------------------------------------
 -in <input image file>

 readImageでイメージファイル名を省略したときのイメージファイル名

 -out <output image file>

 outputImageでイメージファイル名を省略したときのイメージファイル名

 -inxml <input XML file>

 readXMLでXMLファイル名を省略したときのXMLファイル名

 -outxml <output XML file>

 outputXMLでXMLファイル名を省略したときのXMLファイル名

------------------------------------------------------------------------------

== 1.6 Frontendにおけるファイル名の指定

UDFでは OSTA Compressed Unicodeとしてファイル名を書くことが定められており、
8、16、254、255の4つの compression idが用意されています。

どの compression idで名前をエンコードするのかは Frontendでは、明示的に
示してやらねばなりません。ファイル名は

「<compression id>:ファイル名」


のように表わします。例えば、

8:ABCD

はバイナリでは、

08 41 42 43 44

16:ABCD 

はバイナリでは、

10 00 41 00 42 00 43 00 44

となります。現在のところ Frontendで操作をする際に、compression idを指定しないで
ファイルを指定することはできません。

また、compression idが254、255は Deleted bitが立っているときに使用するファイル名
ですが、Frontendは compression idに 254、 255を指定しても Delete bitを明示的に
立てるということを行いません。

このような特殊なデータを作成したい時は、FrontendでXMLを生成した後、XMLを手動で
修正するということになります。

== 1.7 Frontendにおける数値の指定

Frontendでは 引数に数値を書くところで簡単な式を書くことができます。

----------------------------------------
加減乗除(通常の演算規則に従います)

10+30		=> 40
50-20		=> 30
30+20*3		=> 90
(30+20)*3	=> 150

16進数
0x345		=> 837

キロ、メガ、ギガ
30K		=> 30*1024
30M		=> 30*1024*1024
30G		=> 30*1024*1024*1024

変数(非公開)
${name}		=> Frontendクラス内のfield変数で<name>があればその値
		=> 無ければ UDF_ElementBase内の field変数で<name>があればその値

なお計算式においてスペースは入れることができません。

== 1.8 Frontend 通常コマンド一覧

Frontendコマンド受付状態で使用できるコマンドは以下の通りです。コマンド
ラインの引数はスペースで区切ります。コマンドの大文字小文字の違いは無視
します。

現在スペースを含む文字列を引数で指定することはできません。


=== 1.8.1 イメージ読みこみ/書き出し関連

------------------------------------------------------------------------------
  readImage [<input file>]
  
  既存のイメージファイルを読み込みます。
  input fileには読み込むイメージファイルを指定します。

  ファイル名を省略した場合は -in オプションで指定されたファイルを読みこみます。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  readXML [<input XML file>]
  
  既存のXMLドキュメントファイルを読み込みます。
  input XML fileには読み込むXMLファイルを指定します。

  ファイル名を省略した場合は -inxml オプションで指定されたファイルを読みこみます。

------------------------------------------------------------------------------

------------------------------------------------------------------------------
  OutputImage [<output image file>]
  
  現在編集中のイメージおよびXMLファイルをイメージファイルとして出力します。
  output image fileには出力するファイル名を指定します。

  ファイル名を省略した場合は -out オプションで指定されたファイルに書き出します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  OutputXML [<output XML file>]
  
  現在編集中のイメージおよびXMLファイルをXMLドキュメントファイルとして出力します。
  output XML fileには出力するファイル名を指定します。

  ファイル名を省略した場合は -outxml オプションで指定されたファイルに書き出します。
------------------------------------------------------------------------------

=== 1.8.2 ファイル操作関連

------------------------------------------------------------------------------
  mkdir <path> <ad type>
  
  ディレクトリを作成します。
  pathは絶対パスで指定してください。

  Frontendは Policyにしたがって空き領域を自動で探し、そこに必要なFEやFIDを割り当てます。
  その際、FIDが増え、Directoryサイズを広げる必要がある場合でも Frontendは自動で広げません。
  そのような作業をする場合、オペレータが前もってDirectoryサイズを resizeで広げておく必要が
  あります。

  ad typeには、ECMA167 4/14.14.1.1で定義されるタイプを指定します。
  0〜3が指定可能です。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  mkfile <path> [<ad type>]
  
  ファイルを作成します。
  pathは絶対パスで指定してください。

  Frontendは Policyにしたがって空き領域を自動で探し、そこに必要なFEやFIDを割り当てます。
  その際、FIDが増え、Directoryサイズを広げる必要がある場合でも Frontendは自動で広げません。
  そのような作業をする場合、オペレータが前もってDirectoryサイズを resizeで広げておく必要が
  あります。

  作成されたファイルのサイズは0になります。

  ad typeには、ECMA167 4/14.14.1.1で定義されるタイプを指定します。
  0〜3が指定可能です。省略した場合、0が設定されます。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  resize <path> <new size>
  
  ファイルまたはディレクトリのサイズを変更します。
  pathは絶対パスで指定してください。

  new sizeには変更後のサイズをバイトで指定します。

  FrontendはPolicyにしたがって空き領域を自動で探し、そこにファイルのデータ領域を割り当て、
  割り当てた領域は FEの ADリストの最後のADを調整することにより行われます。

  広げた部分のファイルの中身は全て0x00となります。

  ファイルにデータを書く場合は AttachDataToFileを使用します。

------------------------------------------------------------------------------

------------------------------------------------------------------------------
  ChangeADType <file> <type>
  
  fileで指定されたファイルのADのタイプを変更します。
  typeには、ECMA167 4/14.14.1.1で定義されるタイプを指定します。
  0〜3が指定可能です。

注意
ファイルタイプを 3(immediate)にして、FileEntryのサイズが2048バイトを越えたとしても
Frontendはエラーとしません。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Realloc <file>
  
  Policyに従いファイル領域の再割り当てを行います。
  断片化したファイルは連続した領域になります。

------------------------------------------------------------------------------

------------------------------------------------------------------------------
  ChainAllocDesc <file>
  
  fileで指定されたファイルのADリストの最後にタイプ3のADを付加し、
  そのADで指定されている領域にAllocation Extent Descriptorを作成します。

  AEDの領域はPolicyにしたがって適当な空いている場所に確保されます。
  
  このコマンドを実行した直後は、新たに作成されたAED内にはADは1つも記録されていません。

例えば、以下のような構成になっているFEがあった場合

+----+         +----+
|FE  |         |AED |
+----+         +----+
|AD0 |   +-->  |AD3 |
+----+   |     +----+
|AD1 |   |     |AD4 |
+----+   |     +----+
|FLG3| --+
+----+

以下のようになります。

+----+         +----+         +----+
|FE  |   +-->  |AED |   +-->  |AED |
+----+   |     +----+   |     +----+
|AD0 |   |     |AD2 |   |
+----+   |     +----+   |
|AD1 |   |     |AD3 |   |
+----+   |     +----+   |
|FLG3| --+     |FLG3| --+
+----+         +----+

次に resize等でサイズを広げるときは最後の AEDを操作することになります。

------------------------------------------------------------------------------

------------------------------------------------------------------------------
  UnchainAllocDesc <file>
  
  fileで指定されたファイルのADを全て調べ、
  一番最後にあるAllocation Extent Descriptorとその領域を指しているタイプ3のADを削除します。
  
  削除されたAED内に記録されているADは、全て直前のADリスト内に移動して記録されます。
  移動の結果直前のFEまたはAEDが2048バイトを超過するかもしれませんが、Frontendではその
  チェックをしません。

  ファイルにAEDが1つも存在しない場合は何も行いません。

例えば、以下のような構成になっているFEがあった場合

+----+         +----+         +----+
|FE  |   +-->  |AED |   +-->  |AED |
+----+   |     +----+   |     +----+
|AD0 |   |     |AD2 |   |     |AD4 |
+----+   |     +----+   |     +----+
|AD1 |   |     |AD3 |   |     |AD5 |
+----+   |     +----+   |     +----+
|FLG3| --+     |FLG3| --+
+----+         +----+

以下のようになります。

+----+         +----+
|FE  |   +-->  |AED |
+----+   |     +----+
|AD0 |   |     |AD2 |
+----+   |     +----+
|AD1 |   |     |AD3 |
+----+   |     +----+
|FLG3| --+     |AD4 |
+----+         +----+
               |AD5 |
               +----+
------------------------------------------------------------------------------


------------------------------------------------------------------------------
  Remove <file>
  
  fileで指定されたファイルまたはディレクトリを削除します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Rename <file1> <file2>
  
  file1で指定されるファイルまたはディレクトリの名前をfile2へと変更します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Chflag <file> <flag>
  
  ECMA167 4/14.6.8で定義される、ICB tagのFlagsの値を変更します。
  fileには値を変更するファイルを指定します。
  flagにはFlags値を指定します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Chown <file> <uid>
  
  ファイルのOwner IDを変更します。
  fileには値を変更するファイルを指定します。
  uidにはUID値を指定します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Chgrp <file> <gid>
  
  ファイルのGroup IDを変更します。
  fileには値を変更するファイルを指定します。
  gidにはGID値を指定します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  AttachDataToFile <UDF file> <data file>
  
  data fileで指定される外部ファイルのデータを、
  UDFファイルシステム内に存在しているファイルのデータとしてコピーします。
  UDF fileにはUDFファイルシステム内のファイル名を絶対パスで指定します。
  data fileにはUDF fileのデータとなるファイルを指定します。
  
  data fileがUDF fileより大きい場合は、UDF fileのサイズへと調整されます。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  AppendAllocDesc <file>
  
  内部で保持しているADリストをfileに追加します。

  このADリストは@resetAD、@addAD、@allocAndAddAD等を使用してあらかじめ作成して
  おく必要があります。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  RemoveAllocDesc <file>
  
  fileからADリストを削除します。
  削除するADリストは、@resetAD、@addAD、@allocAndAddAD等を使用してあらかじめ
  作成しておく必要があります。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  ReplaceAllocDesc <file>
  
  fileのADを内部で保持しているADリストと入れ替えます。
  このADリストは@resetAD、@addAD、@allocAndAddAD等を使用してあらかじめ作成して
  おく必要があります。
------------------------------------------------------------------------------

=== 1.8.2 デバッグ関連

------------------------------------------------------------------------------
  Help
  
  ヘルプを表示します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  SetDebugLevel <debug_level>
  
  デバッグレベルを設定します。
  デバッグレベルは0〜10の値を指定できます。
  デバッグレベルを高くすると、表示されるデバッグメッセージが多くなります。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  DisplayTree
  
  現在のディレクトリ構造の一覧を表示します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Verify
  
  現在のイメージまたはXMLの検証を行います。
------------------------------------------------------------------------------

=== 1.8.2 特殊なもの

------------------------------------------------------------------------------
  Loop <n> <command> <command args>
  
  commandで指定されるコマンドをn回繰り返して実行します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  CreatePolicy [<class>]
  
  classで指定されるポリシーを作成します。

  ポリシーとは、Frontendでファイル操作を行う際に、
  その動作の基準となる指標をまとめたものです。
  
  例えば、ファイルを作成した際などに、
  新たに作成されたFile EntryにはImplementation IDを指定する必要がありますが、
  この値は環境によって異なるものであり、Frontendでは判断できません。
  
  このImplementation IDのような、環境依存、外部から指定されなければ
  決定できないような挙動・値などをまとめたものをポリシーとして定義しています。
  UDF_Policyをimplementsすることで、新たなポリシーを作成することができます。
  
  classを省略した場合はデフォルトのポリシーを作成します。

※現在ではデフォルトのポリシーしか作成できません。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  SetVolumePolicy <class>
  
  ボリューム作成ポリシーを設定します。

※現在ではデフォルトのポリシーしか作成できません。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  resizePartMap <partmapno> <new size>
  
  パーティションマップのサイズを変更します。
  partmapnoには、パーティションマップ番号を指定します。
  new sizeには変更後のサイズをバイトで指定します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  recalc [<type>]
  
  内部に保持している様々な値・構造を再計算・再構成します。
  typeで再計算する項目を指定することができます。
  typeに指定できる項目は以下の通りです。
  
  1   CRCおよびチェックサム
  2   リファレンス(XMLのref属性)
  3   Descriptor TagのTag Locationの値
  4   GP(Global Point:先頭からの絶対位置)
  5   verifyを行うのに必要な様々な情報
  6   ディレクトリ構造
  7   Space Bitmapのbitmap(Metadata Bitmapを含む)
  8   UDF_Extentの終端のUDF_padのサイズとデータ
  9   (Extended) File EntryとFile Identifierの関連
  10  VDS、LVIS、FSDSの構成
  11  Partition Mapの構成
  12  Logical Volume Integrity DescriptorのFree Space Tableの値
  13  VDS（だけ）の構成
  
  typeを省略した場合、1、2、3、4、7、8、12 の再計算を行います。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  readFile <file> <output file>
  
  UDFファイルシステム内に存在しているファイルを読み出し、ファイルに保存します。
  fileには、UDFファイルシステム内のファイルを絶対パスで指定します。
  output fileには、保存するファイル名を指定します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Quit
  
  Frontendを終了します。
------------------------------------------------------------------------------
  

------------------------------------------------------------------------------
  IncPartMapSubno <partmapno>
  
  パーティションマップ副番号をインクリメントします。

※ 現在このこのコマンドは機能していません。
------------------------------------------------------------------------------


=== 1.8.1 Frontend その他のコマンド

------------------------------------------------------------------------------
  @resetAD
  
  内部で保持しているADリストを全て削除します。
  このリストは、通常コマンドAppendAllocDesc等で使用されます。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  @addAD <size> <type> <lbn> <partno>
  
  内部で保持しているADリストにADを追加します。
  このリストは、通常コマンドAppendAllocDesc等で使用されます。
  
  sizeには、ADのExtent Lengthを指定します。
  typeには、どのADを作成するかを指定します。typeの値と対応するADは以下の通りです。
  
  0   Short Allocation Descriptor
  1   Long Allocation Descriptor
  2   Extended Allocation Descriptor
  
  lbnには、ADのExtent Position(Location)を指定します。
  
  partnoには、Extent LocationのPartition Reference Numberを指定します。
  Short ADを作成する場合は、Short ADが記録されている
  Partition Reference Numberを指定してください(通常は0)。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  @allocAndAddAD <size> <type> <lbn> <partno> <align>
  
  内部で保持しているADリストにADを追加します。
  また、ADで示される領域の確保を行います。
  このリストは、通常コマンドAppendAllocDesc等で使用されます。
  
  sizeには、ADのExtent Lengthを指定します。
  typeには、どのADを作成するかを指定します。typeの値と対応するADは以下の通りです。
  
  0   Short Allocation Descriptor
  1   Long Allocation Descriptor
  2   Extended Allocation Descriptor
  
  lbnには、ADのExtent Position(Location)を指定します。
  
  partnoには、Extent LocationのPartition Reference Numberを指定します。
  Short ADを作成する場合は、Short ADが記録されている
  Partition Reference Numberを指定してください(通常は0)。
  
  alignには、確保する領域のalignサイズを指定します。
------------------------------------------------------------------------------

=== 1.8.1 Frontend プラグイン一覧

Frontendプラグインとは、
ファイルを作る・削除するといった単一のコマンドでは実現できない、
より複雑な一連の手続きをまとめたコマンドです。

プラグインを実行する場合は、Frontendコマンド受付状態でコマンドのかわりに
フルパスでクラス名を入力します。

------------------------------------------------------------------------------
例)
// Frontendコマンド受付状態で
  com.udfv.frontend.FragmentPlugin fragmentFile2 /8:tmp.dat 2K 100 10
------------------------------------------------------------------------------

現在提供しているプラグインは以下の通りです。

------------------------------------------------------------------------------
  FragmentPlugin <fragmentFile|fragmentFile2|fragmentDirectory> <file> <frag size> <n of frags> <n of chain>

<file>に <n of frags>個の <frag size>の大きさの領域を割り当てます。領域は ECCサイズで
揃えられますので、ECCサイズ以下の <frag size>を指定すると結果として領域は断片化します。

断片化したADを追加していく際 <n of chains>個ADを追加させた後、自動的にFLAG3のADを挿入し
FEをチェーンします。

最初の引数で指定する動作モードは以下の3つを用意しています。

fragmentFile	
	現在動作しません。

fragmentFile2
	fragmentFileを高速化したものです。

fragmentDirectory
	FileではなくDirectoryを断片化させます。

※
FileとDirectoryの二種類があるのは MetaDataPartitionMapがある場合、Directoryと
Flieでデータが置かれるパーティションが違うからです。

------------------------------------------------------------------------------

------------------------------------------------------------------------------
  ManyFilePlugin <manyfile|manyfile2|manylink2> <directory> <file> <dir size> <file size> <n>
  
  directoryで指定されたディレクトリのサイズをdir sizeにし、
  そのディレクトリ内にfile sizeの大きさのファイルをn個作成します。
  
  directoryには、ファイルを作成するディレクトリを指定します。
  
  fileは、作成するファイル名のベースとなる名前を指定します。
  作成されるファイル名は、file + n + ".xxx"となります。
  
  dir sizeには、ファイルを作成するディレクトリのサイズをバイトで指定します。
  正しいイメージを作成する場合は、file sizeとnを考慮し、
  全てのファイルが格納できるサイズを指定する必要があります。
  
  file sizeには、作成するファイルの1つあたりのサイズをバイトで指定します。
  
  nには、作成するファイルの個数を指定します。

最初の引数で指定する動作モードは以下の3つを用意しています。

manyfile
	Directoryのサイズを <dir size>に広げ、ファイルを追加します。

manyfile2
	Directoryのサイズを自動で広げず、ファイルを追加します。

manylink2
	Directoryのサイズを自動で広げず、nが 0のファイルだけはファイルで作成し、
	以降のファイルをそのファイルへのハードリンクで追加します。

------------------------------------------------------------------------------

------------------------------------------------------------------------------
  OutSBFromMBFEPlugin
  
  リビジョンがUDF 2.50以降で、Metadata Bitmapが記録されており、
  且つそのbitmapがMetadata Bitmap FE内にimmediateとして記録されているときに、
  bitmapをFE外部へ記録します。
  
  引数はありません。
  
  bitmapを記録するための外部領域は、適当な空いている場所に確保されます。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  RemoveExtAttrPlugin [<file or directory>]
  
  指定されたファイルまたはディレクトリ以下全てのFile Entryから、
  Extended Attributeを削除します。
  
  file or directoryを省略した場合、ルートディレクトリ以下の全ての
  Extended Attributeを削除します。
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  RemoveStreamDirPlugin [<file or directory>]
  
  指定されたファイルまたはディレクトリ以下全てのFile Entryから、
  Stream Directoryを削除します。
  
  file or directoryを省略した場合、System Stream Directoryを全て削除します。
------------------------------------------------------------------------------
