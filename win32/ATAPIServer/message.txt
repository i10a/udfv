UDFVGui との通信内容

■基本
通信はすべて文字列で行っている。
最初にコマンドがあり、空白をはさみオプションが続く。オプションが複数ある場合
空白を区切りとする。ヌル文字を終端とする。

	例)
		READSECTOR 255

通常、戻り値は成功したときは OK か求める値を、失敗したときは ERROR をそれぞれ
文字列で返す。


■コマンド
コマンドとオプションは以下のようになっている。

OPEN
	読み書きの準備を行う。

	オプション
		ドライブ文字列

	リターン
		OK

	例)
		OPEN E:\


READINFO
	ディスクの情報を読み込む

	オプション
		なし

	リターン
		ディスクのバイトサイズの10進表記。


READSECTOR
	指定したセクタを読み込む

	オプション
		セクタ番号

	リターン
		セクタの内容を 1 バイトずつ、空白で区切った 16 進表記。
		("01 02 F3 1A ....")

	例)
		READSECTOR 255


WRITEIMAGE
	イメージの書き込み準備を行う

	オプション
		イメージのサイズ

	リターン
		OK


WRITE
	ディスクイメージの転送

	オプション
		イメージの内容を READSECTOR が返すようなフォーマットであらわしたもの
		最大で 32KB 送ることができる。
		WRITEIMAGE で設定したサイズのデータを送るまでこのコマンド以外は無視さ
		れる。

	リターン
		OK


■プログラム

通信は Receiver クラスが行っている。
Receiver#ThreadProc() を新しいスレッドとして起動し、パケットを待つ。
パケットを受け取ると、簡単な解析を行い、Receiver#set_cmd_buf() でコマンドを
バッファにセットし、メインスレッドにシグナルを送り起こしてやる。

メインスレッドでは、Receiver#ThreadProc() を起動した後、シグナルを受け取るま
でスリープする。
シグナルを受け取ると、Receriver#get_cmd_buf() でコマンドを取り出し、
それぞれのコマンドを実行する。
コマンドの実行が終わるとシグナルを受け取るまで再びスリープする。

WRITEIMAGE コマンドが送られたときは、Receiver からのシグナルを受け取る別のス
レッドを起動する。個のスレッドはすべてのデータを受信すると終了する。
メインスレッド自体は Atapi#write_image() を呼び出し、ディスクの書き込みが終わ
るまで戻らない。


ATAPI へのアクセスは Atapi クラスが行っている。
それぞれの ATAPI コマンドをラッピングしたメソッドと特定の動作をまとめたメソッド
で構成されている。


